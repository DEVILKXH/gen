<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	<display-name>${application}</display-name>
	<!-- spring mvc -->
	<servlet>
		<servlet-name>mvc-dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
				classpath:jsp-config.xml,<!-- JSP 解析器 -->
				classpath:spring-config.xml,<!-- spring 公共配置 -->
				classpath:mybatis-config.xml<!-- 引入 JDBC 配置文件 -->
				classpath:META-INF/spring-config.xml,<!-- servlet jsp 配置 -->
				classpath:META-INF/mybatis-config.xml,<!-- 数据源配置 -->
				<!-- 下面两个文件，子模块用来覆盖父模块的配置 -->
				classpath*:META-INF/*/spring-config.xml,
				classpath*:META-INF/*/mybatis-config.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>mvc-dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- 支持普通类获取request对象 -->
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener> 
	
	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 解决RequestBody只能读取一次的问题 -->
	<filter>
		<filter-name>basicFilter</filter-name>
		<filter-class>com.midea.iapps.common.sys.BasicFilter</filter-class>
	</filter> 
	<filter-mapping>
		<filter-name>basicFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	<!-- cxf webservice -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath*:META-INF/*/ws-config.xml</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
	<servlet>
    	<servlet-name>CXFServlet</servlet-name>
    	<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
    	<load-on-startup>1</load-on-startup>
  	</servlet>
  	<servlet-mapping>
    	<servlet-name>CXFServlet</servlet-name>
    	<url-pattern>/ws/*</url-pattern>
  	</servlet-mapping>
  	
  	<!-- log4j -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>
    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>3000</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    
    <!-- session(min) -->
    <!-- 注意一定要比SSO会话超时时间长，否则profile超时后重新初始化的profile值可能和界面显示的不一致 -->
    <session-config>
        <session-timeout>300</session-timeout>
    </session-config>
	
</web-app>